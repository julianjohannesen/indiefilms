{"version":3,"sources":["actions/actions.js","Components/Video/Videos.jsx","Components/SearchBar/SearchBar.jsx","Pages/Main/Main.jsx","Components/Header/Header.jsx","Components/Button/Button.jsx","Components/Footer/Footer.jsx","Components/App/App.jsx","reducers/initialState.js","reducers/reducers.js","reducers/videoReducer.js","sagas/sagas.js","store/configureStore.js","index.js"],"names":["FETCH_VIDEO","RECEIVE_VIDEO","TESTACTION","TESTACTION_FIRED","testAction","createAction","receiveVideo","data","type","Video","fetchVideo","video","videoList","this","props","videoActions","item","react_default","a","createElement","key","id","name","_this","className","map","index","renderData","React","Component","connect","state","videos","dispatch","bindActionCreators","SearchBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","Main","Components_SearchBar_SearchBar","Videos","Header","Button","Footer","Components_Button_Button","require","config","App","console","log","Components_Header_Header","Pages_Main_Main","Components_Footer_Footer","_ref","initialState","rootReducer","combineReducers","newState","arguments","length","undefined","action","objectSpread","testSagaFired","testSaga","rootSaga","regenerator_default","wrap","_context","prev","next","put","stop","_marked","_context2","takeEvery","_marked2","_context3","all","_marked3","configureStore","sagaMiddleWare","createSagaMiddleware","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","run","sagas","render","es","Components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.dc6a37d6.chunk.js","sourcesContent":["// import axios from 'axios';\n// import fetch from 'node-fetch';\nimport { createAction } from 'redux-actions';\n\nexport const FETCH_VIDEO = 'FETCH_VIDEO';\nexport const RECEIVE_VIDEO = 'RECEIVE_VIDEO';\n\n// writing test action\nexport const TESTACTION = 'TESTACTION';\nexport const TESTACTION_FIRED = 'TESTACTION_FIRED';\nexport const testAction = createAction(TESTACTION);\n\nexport function receiveVideo (data) {\n  return { type: RECEIVE_VIDEO, Video: data };\n}\n\nexport function fetchVideo (video) {\n  return {\n    type: FETCH_VIDEO,\n    video\n  };\n\n  // return (dispatch) => {\n  //   dispatch({ type: 'text', data: 'foo' });\n  // };\n\n  // return (dispatch) => {\n  //   fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then(response =>\n  //       response.json().then(data => ({\n  //         data,\n  //         status: response.status\n  //       })))\n  //     .then((response) => {\n  //       if (response.status === 200) {\n  //         dispatch(receiveVideo(response.data));\n  //       } else {\n  //         const flash = {\n  //           type: 'error',\n  //           title: 'Error getting task list',\n  //           content: 'There was an error getting the task list. Please try again.'\n  //         };\n  //         dispatch({ type: 'DISPLAY_FLASH', data: flash });\n  //       }\n  //     });\n  // };\n}\n\n// export function receiveVideo (json) {\n//   return {\n//     type: RECEIVE_VIDEO,\n//     video: json.video\n//   };\n// }\n//\n// export function fetchVideo (value) {\n//   const request = 'foo';\n//   // const request = axios.get('http://tgrrr.com');\n//   return function (dispatch) {\n//     dispatch({\n//       type: FETCH_VIDEO,\n//       payload: request\n//     });\n//     // .then(response => response.json())\n//     // .then(json => dispatch(receiveVideo(json)));\n//   };\n// }\n\n// export function fetchVideo () {\n//   return dispatch => fetch(url(), {\n//     method: 'GET',\n//     mode: 'cors',\n//     credentials: 'include',\n//     headers: {\n//       'x-api-key': apiKey,\n//       Accept: 'application/json'\n//     }\n//   })\n//     .then(response => response.json())\n//     .then(json => dispatch(receiveVideo(json)));\n// }\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as videoActions from '../../actions/actions';\n\nclass videoList extends React.Component {\n  componentWillMount () {\n    this.props.videoActions.fetchVideo();\n  }\n\n  renderData (item) {\n    return <div key={item.id}>{item.name}</div>;\n  }\n\n  render () {\n    if (!this.props.video) {\n      return (\n        <div>\n          Loading Stuff...\n        </div>\n      );\n    }\n    return (\n      <div className=\"\">\n        {\n          this.props.video.map((item, index) => (\n            this.renderData(item)\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nvideoList.propTypes = {\n  videoActions: PropTypes.object,\n  videos: PropTypes.array\n};\n\nfunction mapStateToProps (state) {\n  return {\n    videos: state.videos\n  };\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    videoActions: bindActionCreators(videoActions, dispatch)\n  };\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(videoList);\n\n// import React from 'react';\n// import { connect } from 'react-redux';\n// import { bindActionCreators } from 'redux';\n// import * as videoActions from '../../actions/actions';\n// import Video from './Video';\n// import './Video.css';\n//\n// const videos = [\n//   {\n//     id: 1,\n//     source: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4'\n//   },\n//   {\n//     id: 2,\n//     source: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4'\n//   }\n// ];\n//\n// const Videos = () => (\n//   <ul>\n//     {videos.map(video => (\n//       <li className=\"video-wrapper\" key={video.id}>\n//         <Video source={video.source} />\n//       </li>\n//     ))}\n//   </ul>\n// );\n//\n// function mapStateToProps (state) {\n//   return {\n//     videos: state.videos\n//   };\n// }\n//\n// function mapDispatchToProps (dispatch) {\n//   return {\n//     videoActions: bindActionCreators(videoActions, dispatch)\n//   };\n// }\n//\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(actions);\n","import React, { Component } from \"react\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { term: \"\" };\n  }\n  render() {\n    return (\n      <div>\n        <input />\n      </div>\n    );\n  }\n}\nexport default SearchBar;\n","import React from 'react';\nimport Videos from '../../Components/Video/Videos';\nimport SearchBar from '../../Components/SearchBar/SearchBar';\n\nconst Main = () => (\n  <div>\n    <h2>Our Main component</h2>\n    <SearchBar />\n    <Videos />\n  </div>\n);\n\nexport default Main;\n","import React from 'react';\n\nconst Header = () => <h1>Indie Film header foo</h1>;\n\nexport default Header;\n","import React from 'react';\nimport  './Button.css';\n\nconst Button = () => <div className=\"Button__wrapper\">click here</div>;\n\nexport default Button;\n","import React from 'react';\nimport './Footer.css';\nimport Button from '../Button/Button';\nconst Footer = () => (\n\n  <div className=\"Footer__wrapper\">\n    foot is a leg end\n    <Button />\n  </div>\n\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Main from '../../Pages/Main/Main';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport { testAction } from '../../actions/actions';\nimport './App.css';\n\nrequire('dotenv').config();\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.testAction();\n  }\n\n  render(){\n    console.log(this.props);\n    return(\n      <div className=\"App\">\n    <Header />\n    <Main />\n    <h2>Start editing to see some magic happen {'\\u2728'}</h2>\n    <Footer />\n  </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ video }) => ({\n  video: video,\n});\n\nexport default connect(mapStateToProps, { testAction })(App);\n","export default {\n  video: []\n};\n","import { combineReducers } from 'redux';\nimport video from './videoReducer';\n\nexport const LOG_IN = 'log_in';\n\nconst rootReducer = combineReducers({\n  video\n});\n\nexport default rootReducer;\n","import initialState from './initialState';\nimport { FETCH_VIDEO, RECEIVE_VIDEO, TESTACTION_FIRED } from '../actions/actions';\n\nexport default function video (state = initialState.video, action) {\n  let newState;\n  switch (action.type) {\n    case FETCH_VIDEO:\n      console.log('FETCH_VIDEO Action');\n      return action;\n    case RECEIVE_VIDEO:\n      newState = action.video;\n      console.log('RECEIVE_VIDEO Action');\n      return newState;\n    case TESTACTION_FIRED:\n      console.log('Test action fired..');\n      return { ...initialState };\n    default:\n      return state;\n  }\n}\n","// import { delay } from 'redux-saga';\nimport { put, takeEvery, all } from 'redux-saga/effects';\n\n// This will fire the desirable action\nexport function * testSagaFired () {\n  yield put({ type: 'TESTACTION_FIRED' });\n}\n\n// keep eye on action\nexport function * testSaga () {\n  yield takeEvery('TESTACTION', testSagaFired);\n}\n\n// combine the sagas\nexport default function * rootSaga () {\n  yield all([\n    testSaga()\n  ]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../reducers/reducers';\nimport sagas from '../sagas/sagas';\n\nconst configureStore = () => {\n  const sagaMiddleWare = createSagaMiddleware();\n\n  const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    applyMiddleware(sagaMiddleWare)\n  );\n\n  sagaMiddleWare.run(sagas);\n\n  return store;\n}\n\nexport default configureStore;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './Components/App/App';\nimport configureStore from './store/configureStore';\nimport './index.css';\n\nconst store = configureStore();\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}